version: "3.5"
services:
  workspace:
    build:
      context: ./workspace
      dockerfile: Dockerfile
      args:
        NODE_VERSION: ${NODE_VERSION}
        NOTROOT_USER: ${NOTROOT_USER}
    ports:
      - "2222:22"
    volumes:
      - ../../docker-www:/data/www:rw
    networks:
      - backend
    restart: always

  php-fpm:
    build:
      context: ./php
      dockerfile: Dockerfile${PHP_VERSION}
      args:
        INSTALL_EXT_PHPREDIS: ${INSTALL_EXT_PHPREDIS}
        INSTALL_EXT_SWOOLE: ${INSTALL_EXT_SWOOLE}
    cap_add:
      - SYS_PTRACE
    ports:
      - "9000:9000"
    links:
      - mysql-db:mysql-db
      - redis-db:redis-db
    volumes:
      - ../../docker-www:/data/www:rw
      - ./php/php-fpm.conf:/usr/local/etc/php-fpm.conf:rw
      - ../logs/php-fpm:/var/log/php-fpm:rw
    networks:
      - backend
    restart: always
    command: php-fpm

  php-fpm74:
    build:
      context: ./php
      dockerfile: Dockerfile74
      args:
        INSTALL_EXT_PHPREDIS: ${INSTALL_EXT_PHPREDIS}
        INSTALL_EXT_SWOOLE: ${INSTALL_EXT_SWOOLE}
    cap_add:
      - SYS_PTRACE
    ports:
      - "9074:9000"
    links:
      - mysql-db:mysql-db
      - redis-db:redis-db
      - elasticsearch-elk:elasticsearch-elk
    volumes:
      - ../../docker-www:/data/www:rw
      - ./php/php-fpm.conf:/usr/local/etc/php-fpm.conf:ro
      - ../logs/php-fpm:/var/log/php-fpm:rw
    networks:
      - backend
    restart: always
    command: php-fpm

  nginx:
    build: ./nginx
    depends_on:
      - php-fpm
      - php-fpm74
    links:
      - php-fpm:php-fpm
      - php-fpm74:php-fpm74
    volumes:
      - ../../docker-www:/data/www:rw
      - ./nginx/conf.d:/etc/nginx/conf.d:rw
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:rw
      - ../logs/nginx/:/var/log/nginx
    networks:
      - backend
    ports:
      - "80:80"
      - "443:443"
    restart: always
    command: nginx -g 'daemon off;'

  mysql-db:
    build: ./mysql
    networks:
      - backend
    ports:
      - "3306:3306"
    volumes:
      - ../data/mysql:/var/lib/mysql:rw
      - ../logs/mysql:/var/lib/mysql-logs:rw
      - ./mysql/conf.d:/etc/mysql:rw
    environment:
      MYSQL_ROOT_PASSWORD:
      MYSQL_DATABASE:
      MYSQL_USER:
      MYSQL_PASSWORD:
    restart: always
    command: "--character-set-server=utf8"

  redis-db:
    build: ./redis
    networks:
      - backend
    ports:
      - "6379:6379"
    volumes:
      - ../data/redis:/data
    restart: always

  phpmyadmin:
    build: ./phpmyadmin
    networks:
      - backend
      - frontend
    ports:
      - "8080:80"
    environment:
      PMA_ARBITRARY:
      PMA_HOST:
      PMA_VERBOSE:
      PMA_PORT:
      PMA_HOSTS:
      PMA_VERBOSES:
      PMA_PORTS:
    depends_on:
      - mysql-db
    links:
      - mysql-db:mysql
    restart: always

  elasticsearch-elk:
    build: ./elasticsearch
    environment:
      - cluster.name=es-cluster
      - node.name=es-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - cluster.initial_master_nodes=es-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - ../data/elasticsearch:/usr/share/elasticsearch/data:rw
    networks:
      - backend
      - frontend
    ports:
      - "9200:9200"
      - "9300:9300"
    restart: always
    command: elasticsearch

  kibana-elk:
    build:
      context: ./kibana
      args:
        ELK_VERSION: ${ELK_VERSION}
    environment:
      - ELASTICSEARCH_HOSTS=${ELASTICSEARCH_HOSTS}
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch-elk
    links:
      - elasticsearch-elk:elasticsearch-elk
    networks:
      - frontend
      - backend

networks:
  frontend:
  backend:
